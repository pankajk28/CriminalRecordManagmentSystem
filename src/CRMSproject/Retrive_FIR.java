/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package CRMSproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author Pankaj
 */
public class Retrive_FIR extends javax.swing.JFrame {
Connection con;
    Statement s;
    ResultSet rs;
    /**
     * Creates new form Retrive_FIR
     */
    public Retrive_FIR() {
        initComponents();
         String user = "root";
    String password = "12345";
   String url = "jdbc:mysql://localhost/mydb?user="+user+"&password="+password;
    
         
        try {
            
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con = DriverManager.getConnection(url);
            
        } catch (ClassNotFoundException | SQLException ex){
            //Logger.getLogger(CMTable.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
                
            } 
    }
    
    public Retrive_FIR(int firid) {
        initComponents();
        this.setVisible(true);
         String user = "root";
    String password = "12345";
   String url = "jdbc:mysql://localhost/mydb?user="+user+"&password="+password;
    
         
        try {
            
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con = DriverManager.getConnection(url);
            {
            s = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            String query = "SELECT * FROM FIR where fir_id="+firid;
            s.execute(query);
            ResultSet rs = s.getResultSet();
            ArrayList<HashMap<String,String>> record  = new ArrayList<HashMap<String,String>>();
            HashMap<String, String> map;
            while(rs.next()){
                map = new HashMap<String, String>();
                map.put("FIR_ID",rs.getString("FIR_ID"));
                map.put("PETITIONER_NAME",rs.getString("PETITIONER_NAME"));
                map.put("PETITIONER_NIC",rs.getString("PETITIONER_NIC"));
                map.put("DATE_LODGED",rs.getString("DATE_LODGED"));
                map.put("TIME_LODGED",rs.getString("TIME_LODGED"));
                map.put("INCIDENT_PLACE",rs.getString("INCIDENT_PLACE"));
                map.put("INCIDENT_DATE",rs.getString("INCIDENT_DATE"));
                map.put("INCIDENT_TIME",rs.getString("INCIDENT_TIME"));
                map.put("DETAILS",rs.getString("DETAILS"));
                record.add(map);
            }

            for(int i=0; i<record.size(); i++){
                jTable2.setValueAt(record.get(i).get("FIR_ID"), i, 0);
                jTable2.setValueAt(record.get(i).get("PETITIONER_NAME"), i, 1);
                jTable2.setValueAt(record.get(i).get("PETITIONER_NIC"), i, 2);
                jTable2.setValueAt(record.get(i).get("DATE_LODGED"), i, 3);
                jTable2.setValueAt(record.get(i).get("TIME_LODGED"), i, 4);
                jTable2.setValueAt(record.get(i).get("INCIDENT_PLACE"), i, 5);
                jTable2.setValueAt(record.get(i).get("INCIDENT_DATE"), i, 6);
                jTable2.setValueAt(record.get(i).get("INCIDENT_TIME"), i, 7);
                jTable2.setValueAt(record.get(i).get("DETAILS"), i, 8);
            }
            System.out.println(""+record.toString());
        } 
            
        } catch (ClassNotFoundException | SQLException ex){
            //Logger.getLogger(CMTable.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
                
            } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Criminal Record Management System");
        getContentPane().setLayout(null);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "FIR_ID", "NAME", "NIC", "DATE_LODGED", "TIME_LODGED", "INCIDENT_PLACE", "INCIDENT_DATE", "INCIDENT_TIME", "DETAILS"
            }
        ));
        jTable2.setColumnSelectionAllowed(true);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 50, 810, 200);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Retrive");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(280, 260, 90, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Back To FIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(390, 260, 130, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("FIR Record");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(350, 10, 100, 30);

        setSize(new java.awt.Dimension(826, 344));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try
        {
            s = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            String query = "SELECT * FROM FIR";
            s.execute(query);
            ResultSet rs = s.getResultSet();
            ArrayList<HashMap<String,String>> record  = new ArrayList<HashMap<String,String>>();
            HashMap<String, String> map;
            while(rs.next()){
                map = new HashMap<String, String>();
                map.put("FIR_ID",rs.getString("FIR_ID"));
                map.put("PETITIONER_NAME",rs.getString("PETITIONER_NAME"));
                map.put("PETITIONER_NIC",rs.getString("PETITIONER_NIC"));
                map.put("DATE_LODGED",rs.getString("DATE_LODGED"));
                map.put("TIME_LODGED",rs.getString("TIME_LODGED"));
                map.put("INCIDENT_PLACE",rs.getString("INCIDENT_PLACE"));
                map.put("INCIDENT_DATE",rs.getString("INCIDENT_DATE"));
                map.put("INCIDENT_TIME",rs.getString("INCIDENT_TIME"));
                map.put("DETAILS",rs.getString("DETAILS"));
                record.add(map);
            }

            for(int i=0; i<record.size(); i++){
                jTable2.setValueAt(record.get(i).get("FIR_ID"), i, 0);
                jTable2.setValueAt(record.get(i).get("PETITIONER_NAME"), i, 1);
                jTable2.setValueAt(record.get(i).get("PETITIONER_NIC"), i, 2);
                jTable2.setValueAt(record.get(i).get("DATE_LODGED"), i, 3);
                jTable2.setValueAt(record.get(i).get("TIME_LODGED"), i, 4);
                jTable2.setValueAt(record.get(i).get("INCIDENT_PLACE"), i, 5);
                jTable2.setValueAt(record.get(i).get("INCIDENT_DATE"), i, 6);
                jTable2.setValueAt(record.get(i).get("INCIDENT_TIME"), i, 7);
                jTable2.setValueAt(record.get(i).get("DETAILS"), i, 8);
            }
            System.out.println(""+record.toString());
        } 
        catch (SQLException ex)
        {
            //Logger.getLogger(CMTable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FIR P=new FIR();
        P.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Retrive_FIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Retrive_FIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Retrive_FIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Retrive_FIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Retrive_FIR().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
